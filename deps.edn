{:paths ["src/main/clojure" "src/main/resources"]

 :deps
 {org.clojure/clojure {:mvn/version "1.12.0"}
  org.clojure/tools.deps {:mvn/version "0.21.1467"}
  ;org.clojure/tools.deps {:git/url "https://github.com/clojure/tools.deps.git"
  ;                        :git/sha "459222ca6e4fce91cf5838435589a028cedbc784"}
  org.clojure/tools.namespace {:mvn/version "1.5.0"}
  org.slf4j/slf4j-nop {:mvn/version "1.7.36"}}

 :aliases
 {;; Run all tests
  ;; clj -X:test
  :test {:extra-paths ["src/test/clojure"]
         ;;:extra-deps {io.github.cognitect-labs/test-runner
         ;;             {:local/root "../test-runner"}}
         :extra-deps {io.github.cognitect-labs/test-runner
                      {:git/url "https://github.com/cognitect-labs/test-runner.git"
                       :git/tag "v0.5.1" :git/sha "dfb30dd"}}
         :exec-fn cognitect.test-runner.api/test
         :exec-args {:dirs ["src/test/clojure"]
                     :patterns [".*"]}
         :jvm-opts ["-XX:-OmitStackTraceInFastThrow"]}

  ;; Regenerate docs in docs/
  ;; clj -X:docs
  :docs {:extra-deps {codox/codox {:mvn/version "0.10.8"}}
         :exec-fn codox.main/generate-docs
         :exec-args {:source-paths ["src/main/clojure"]
                     :namespaces [clojure.tools.build.api]
                     :output-path "docs"}}

   ;; Lint the source
   ;; clj -M:lint
   :lint {:replace-deps {clj-kondo/clj-kondo {:mvn/version "2024.11.14"}}
          :main-opts ["-m" "clj-kondo.main" "--lint" "src"]}
  }
}
